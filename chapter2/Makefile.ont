#
# Nanopore-Illumina hybrid genome assembly workflow
#

#Nanopore dna reads
READS ?= reads/nano_dna.fq.gz

# Illumina DNA reads
R1 ?= reads/illumina_R1.fq.gz
R2 ?= reads/illumina_R2.fq.gz

# Reference fasta
REF ?= refs/Py17X_Genome.fasta

# Estimated genome size
GENOME_SIZE ?= 23m

# File with trimmed reads
TRIM_OUT ?= reads/trimmed.fq

# Folder with scripts
SRC ?= src/ont_asm

# Flye output directory
FLYE_DIR ?= flye_out

# Scaffold output directory
SCAF_DIR ?= ${FLYE_DIR}/scaffold

# Polish output directory
POLISH_DIR ?=polish_out

# Flye output file
FLYE_OUT =${FLYE_DIR}/assembly.fasta

# Scaffold fasta file
SCAFF =${SCAF_DIR}/ragtag.scaffold.fasta

# Final polished fasta
POLISH_FA =${POLISH_DIR}/assembly_polished.fa

# Makefile customizations.
.RECIPEPREFIX = >
.DELETE_ON_ERROR:
.ONESHELL:
MAKEFLAGS += --warn-undefined-variables --no-print-directory

# Print usage information.
usage::
> @echo "#"
> @echo "# Makefile.ont.mk: Create Nanopore-Illumina hybrid genome assembly"
> @echo "#"
> @echo "# make all READS=${READS} GENOME_SIZE=${GENOME_SIZE} R1=${R1} R2=${R2} REF=${REF}"
> @echo "#"
> @echo "# READS : Nanopore reads"
> @echo "# R1,R2 : Illumina reads"
> @echo "# GENOME_SIZE : Estimated genome size"
> @echo "# REF: Reference genome (used for polishing)"
> @echo "# "
> @echo "# The final output is assembly_polished.fa in the polish directory."
> @echo "#"

# Trim adapter sequences
${TRIM_OUT}:${READS}
>make -f ${SRC}/porechop.mk READS=${READS} TRIM_OUT=${TRIM_OUT} trim

# De novo assembly with Flye
${FLYE_OUT}:${TRIM_OUT}
>make -f ${SRC}/flye.mk READS=${TRIM_OUT} GENOME_SIZE=${GENOME_SIZE} OUT=${FLYE_DIR} RTYPE=nano-corr assembly

# Scaffold the assembly
${SCAFF}: ${REF} ${FLYE_OUT}
>make -f ${SRC}/scaffold.mk ASM=${FLYE_OUT} REF=${REF} OUT=${SCAF_DIR} scaffold

#Run the script to perform polishing with Illumina
${POLISH_FA}:${SCAFF} ${R1} ${R2} ${REF}
>python $(SRC)/multi_polish.py ${POLISH_DIR} ${SCAFF} ${R1} ${R2} ${REF} >multi_polish.sh
>bash multi_polish.sh

trim:${TRIM_OUT}
>ls -l ${TRIM_OUT}

assembly:${FLYE_OUT}
>ls -l ${FLYE_OUT}

scaffold:${SCAFF}
> ls -l ${SCAFF}

polish:${POLISH_FA}
>ls -l ${POLISH_FA}

all: trim assembly scaffold polish
>echo "Done!"
